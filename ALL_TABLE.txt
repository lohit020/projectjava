CREATE TABLE credentialsBean (
    userId varchar(10),
    Password varchar(255) NOT NULL,
    usertype varchar(10),
    loginStatus NUMBER(4),
    PRIMARY KEY (userId)
);


FOODBEAN
-----------
CREATE TABLE FOODBEAN(
FOODID VARCHAR2(20) NOT NULL,
NAME VARCHAR2(25) NOT NULL,
TYPE VARCHAR2(10) NOT NULL,
FOODSIZE VARCHAR2(15),
QUANTITY NUMBER(10),
PRICE NUMBER(20),

PRIMARY KEY (FOODID)
);



CREATE TABLE CREDITCARDBEAN(
CREDITCARD_NUM VARCHAR2(20) NOT NULL,
VALID_FROM VARCHAR2(25) NOT NULL,
VALID_TO VARCHAR2(10) NOT NULL,
BALANCE NUMBER,
USER_ID VARCHAR2(10),


PRIMARY KEY (CREDITCARD_NUM)
);



 CREATE TABLE CARTBEAN 
   (
    CARTID NUMBER(10,0) NOT NULL PRIMARY KEY , 
	COST FLOAT(126) NOT NULL ENABLE, 
	ORDERDATE DATE, 
	QUANTITY NUMBER(10,0) NOT NULL ENABLE, 
	TYPE VARCHAR2(50), 
	USERID VARCHAR2(50), 
	FOODID VARCHAR2(50), 
    FOREIGN KEY (USERID) REFERENCES CREDENTIALSBEAN(USERID),
    FOREIGN KEY (FOODID) REFERENCES FOODBEAN (FOODID)
    ON DELETE CASCADE);



CREATE TABLE PROFILEBEAN
( USERID VARCHAR(10) PRIMARY KEY,
  CITY VARCHAR2(20), 
	DATEOFBIRTH DATE, 
	EMAILID VARCHAR2(50), 
	FIRSTNAME VARCHAR2(50), 
	GENDER VARCHAR2(50), 
	LASTNAME VARCHAR2(50), 
	LOCATION VARCHAR2(50), 
	MOBILENO VARCHAR2(50), 
	PASSWORD VARCHAR2(50), 
	PINCODE VARCHAR2(50), 
	STATE VARCHAR2(50), 
	STREET VARCHAR2(50),
    FOREIGN KEY (USERID)
    REFERENCES CREDENTIALSBEAN (USERID)
    ON DELETE CASCADE
);


CREATE TABLE ORDERBEAN (
    ORDERID VARCHAR2(255 BYTE) NOT NULL ENABLE, 
	CITY VARCHAR2(255 BYTE), 
	MOBILENO VARCHAR2(255 BYTE), 
	ORDERDATE DATE, 
	ORDERSTATUS VARCHAR2(255 BYTE), 
	PINCODE VARCHAR2(255 BYTE), 
	STATE VARCHAR2(255 BYTE), 
	STREET VARCHAR2(255 BYTE), 
	TOTALPRICE FLOAT(126) NOT NULL ENABLE, 
	CARTID NUMBER(10,0), 
	USERID VARCHAR2(255 BYTE), 
	STOREID VARCHAR2(255 BYTE), 
	 PRIMARY KEY (ORDERID),
      FOREIGN KEY (USERID) REFERENCES CREDENTIALSBEAN(USERID),
       FOREIGN KEY (CARTID) REFERENCES CARTBEAN(CARTID),
        FOREIGN KEY (STOREID) REFERENCES STOREBEAN(STOREID)
     
     );
    

